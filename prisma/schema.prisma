generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Categori {
  id Int @id @default(autoincrement())

  name     String    @unique
  products Product[]
}

model User {
  id Int @id @default(autoincrement())

  fullName String
  email    String @unique
  password String

  // Cart   Cart? @relation(fields: [cartId], references: [id])
  // cartId Int?  @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Cart      Cart[]
}

model Product {
  id Int @id @default(autoincrement())

  name     String
  imageUrl String

  Categori   Categori @relation(fields: [categoriId], references: [id])
  categoriId Int

  Cart   Cart @relation(fields: [cartId], references: [id])
  cartId Int

  ingradient Ingradient[]
  variation  ProductVariation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductVariation {
  id Int @id @default(autoincrement())

  price     Int
  size      Int?
  pizzaType String?

  product   Product @relation(fields: [productId], references: [id])
  productId Int
}

model Ingradient {
  id Int @id @default(autoincrement())

  name     String
  price    Int
  imageUrl String

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id Int @id @default(autoincrement())

  totalAmout Int       @default(0)
  products   Product[]

  user   User @relation(fields: [userId], references: [id])
  userId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
